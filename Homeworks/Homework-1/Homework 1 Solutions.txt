Homework 1 Solution Key

1.3

We will count the transfer as completed when the last data bit arrives at its destination.

An alternative interpretation would be to count until the last ACK arrives back at the sender, in which case the time would be half an RTT (25ms) longer.

(a) 2 initial RTT’s (100ms) + 1000KB/1.5Mbps (transmit) + RTT/2 (propagation = 25ms) ~= 0.125 + 8Mbit/1.5Mbps = 0.125 + 5.333 sec = 5.458 sec. If we pay more careful attention to when a mega is 106 versus 220, we get 8,192,000 bits/1,500,000bps = 5.461 sec, for a total delay of 5.586 sec.

(b) To the above we add the time for 999 RTTs (the number of RTTs between when packet 1 arrives and packet 1000 arrives), for a total of 5.586 + 49.95 = 55.536.

(c) This is 49.5 RTTs, plus the initial 2, for 2.575 seconds.

(d) Right after the handshaking is done we send one packet. One RTT after the handshaking we send two packets. At n RTTs past the initial handshaking we have sent 1 + 2 + 4 + · · ·+ 2^n = 2^(n+1)-1 packets. At n = 9 we have thus been able to send all 1,000 packets; the last batch arrives 0.5 RTT later. Total time is 2+9.5 RTTs, or .575 sec.


1.5

Propagation delay is 4×10^3m/(2×10^8m/s) = 2×10^(-5) sec = 20 µs. 100 bytes/20µs is 5 bytes/µs, or 5MBps, or 40Mbps. For 512-byte packets, this rises to 204.8Mbps.


1.11

10 Gbps = 10^10 bps, meaning each bit is 10^(-10) sec (0.1 ns) wide. The length in the wire of such a bit is .1 ns × 2.3 × 10^8 m/sec = 0.023 m or 23mm


1.13

(a) The minimum RTT is 2 × 385,000,000m / 3×10^8 m/s = 2.57 seconds.

(b) The delay x bandwidth product is 2.57 s×1Gbps = 2.57Gb = 321 MB.

(c) This represents the amount of data the sender can send before it would be possible to receive a response.


1.18

(a) The effective bandwidth is 100Mbps; the sender can send data steadily at this rate and the switches simply stream it along the pipeline. We are assuming here that no ACKs are sent, and that the switches can keep up and can buffer at least one packet.

(b) The data packet takes 520 microseconds (us) (4 × 120us + 4 × 10us = 520us) to be delivered; the 400 bit ACKs take 4 us/link to be sent back,  plus propagation, for a total of 4×4 us + 4 × 10 us = 56 us; thus the  total RTT is 576 us. 12000 bits in 576us is about 20.8 Mbps.

(c) 100×4.7×109 bytes / 12 hours = 4.7×1011 bytes/(12×3600 s) ~= 10.9MBps = 87Mbps.


1.19

(a) 100×10^6bps × 10 × 10^(-6) sec = 1000 bits = 125 bytes.

(b) The first-bit delay is 520us through the store-and-forward switch, as in 18(b). 100 × 10^6 bps × 520×10^(-6) sec = 52000 bits = 650 bytes.

(c) 1.5 × 10^6 bps × 50 × 10^(-3) sec = 75,000 bits = 9375 bytes.

(d) The path is through a satellite, i.e. between two ground stations, not to a satellite; this ground-to-satellite to-ground path makes the total one-way travel distance 2 × 35,900,000 meters. With a propagation speed of c = 3×10^8 meters/sec, the one-way propagation delay is thus 2×35,900,000/c = 0.24 sec. Bandwidth × delay is thus 1.5 × 10^6 bps × 0.24 sec = 360,000 bits ~= 45 KBytes


2.2

This is a drawing... I don't want to do ascii art here :-(  Take a look at HW1-2.2.png file in this directory.


2.4

One can list all 5-bit sequences and count, but here is another approach: there are 23 sequences that start with 00, and 23 that end with 00. There are two sequences, 00000 and 00100, that do both. Thus, the number that do either is 8+8-2 = 14, and finally the number that do neither is 32 - 14 = 18. Thus there would have been enough 5-bit codes meeting the stronger requirement; however, additional codes are needed for control sequences.


2.11

Suppose an undetectable three-bit error occurs. The three bad bits must be spread among one, two, or three rows. If these bits occupy two or three rows, then some row must have exactly one bad bit, which would be detected by the parity bit for that row. But if the three bits are all in one row, then that row must again have a parity error (as must each of the three columns containing the bad bits).


2.12

If we flip the bits corresponding to the corners of a rectangle in the 2-D layout of the data, then all parity bits will still be correct. Furthermore, if four bits change and no error is detected, then the bad bits must form a rectangle: in order for the error to go undetected, each row and column must have no errors or exactly two errors.


2.18

(a) We take the message 11100011, append 000 to it, and divide by 1001 according to the method shown in Section 2.4.3. The remainder is 100; what we transmit is the original message with this remainder appended, or 1110 0011 100.

(b) Inverting the first bit of the transmission gives 0110 0011 100; dividing by 1001 (x^3 + 1) gives a remainder of 10; the fact that the remainder is nonzero tells us a bit error occurred.


2.23

(a) Propagation delay = 20 × 10^3 m/(2 × 10^8 m/sec) = 100 usec.

(b) The roundtrip time would be about 200 usec. A plausible timeout time would be twice this, or 0.4ms. Smaller values (but larger than 0.2ms!) might be reasonable, depending on the amount of variation in actual RTTs. See Section 5.2.5 of the text.

(c) The propagation-delay calculation does not consider processing delays that may be introduced by the remote node; it may not be able to answer immediately.


2.24

Bandwidth × (roundtrip)delay is about 125KB/sec × 2.5 sec, or 312 packets. The window size should be this large; the sequence number space must cover twice this range, or up to 624. 10 bits are needed.


Extra Credit problem:

(a) best case: all nodes in a line, each node has 2 neighbors, O(N)

(b) worst case: all nodes connected to each other, each node has N-1 neighbors, O(N^2)
